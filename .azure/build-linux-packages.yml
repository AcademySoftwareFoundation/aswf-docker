parameters:
  groups: []

jobs:
- ${{ each group in parameters.groups }}:
  - ${{ each group_version in group.versions }}:
    - job: build_package_group_${{ group.name }}_${{ group_version }}
      displayName: Build package group ${{ group.name }}:${{ group_version }}
      condition: ${{ group.condition }}
      dependsOn: ${{ group.dependsOn }}
      timeoutInMinutes: 0
      variables:
        DOCKER_CLI_EXPERIMENTAL: enabled
        DOCKER_BUILDKIT: '1'
      pool:
        vmImage: 'ubuntu-18.04.3'
      steps:        
        - template: prepare-docker.yml
          parameters:
            image_name: 'package_${{ group.name }}'
            cache_key_version: ${{ group.cache_key_version }}
            cache_key_folder: ${{ group_version }}
            use_cacheable: 'true'

        - bash: ./build-packages.sh ${{ group.name }} ${{ group_version }} true $(Build.Repository.Uri) $(Build.SourceBranch)
          displayName: Create ${{ group.name }}:${{ group_version }} packages

        - bash:  |
            set -ex
            docker run --rm \
              --volumes-from buildx_buildkit_cacheable0 \
              -v $(Pipeline.Workspace)/cache/ci-package_${{ group.name }}:/backup \
              alpine /bin/sh -c "cd / && tar cf /backup/backup.tar.gz /var/lib/buildkit"
          displayName: Save Docker Cache
          condition: eq(variables.DOCKER_CACHE_RESTORED, 'false')
