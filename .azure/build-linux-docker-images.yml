parameters:
  vfxplatform_version: '2019'
  aswf_version: '2019.0'
  python_version: '2.7'
  cicommon_version: '1.0'
  images: []
  tags: []

jobs:
- ${{ each img in parameters.images }}:
  - job: build_${{ img }}_${{ parameters.vfxplatform_version }}
    displayName: Build ci-${{ img }}:${{ parameters.vfxplatform_version }}
    timeoutInMinutes: 0
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
      - download: current
        artifact: ci-common-image
        displayName: Download Docker cache artifact
        condition: ne(variables['Build.SourceBranch'], 'refs/heads/master')
      
      - bash: |
          gunzip -c ci-common-image/ci-common.tar.gz | docker load
          rm -rf ci-common-image
        displayName: Load ci-common image from artifact
        condition: ne(variables['Build.SourceBranch'], 'refs/heads/master')

      - bash: |
          docker build . -t $(dockerhub.org)/ci-${{ img }}:${{ parameters.aswf_version }} -f ci-${{ img }}/Dockerfile \
            --build-arg BUILD_DATE=`date -u +'%Y-%m-%dT%H:%M:%SZ'` \
            --build-arg VCS_REF=`git rev-parse --short HEAD` \
            --build-arg ASWF_ORG=$(dockerhub.org) \
            --build-arg VFXPLATFORM_VERSION=${{ parameters.vfxplatform_version }} \
            --build-arg CI_COMMON_VERSION=${{ parameters.cicommon_version }} \
            --build-arg PYTHON_VERSION=${{ parameters.python_version }}
        displayName: Build Docker Image

      - bash: docker tag $(dockerhub.org)/ci-${{ img }}:${{ parameters.aswf_version }} $(dockerhub.org)/ci-${{ img }}:${{ parameters.vfxplatform_version }}
        displayName: Tag Docker Image with VFX Platform Version
      
      - ${{ each tag in parameters.tags }}:
        - bash: docker tag $(dockerhub.org)/ci-${{ img }}:${{ parameters.aswf_version }} $(dockerhub.org)/ci-${{ img }}:${{ tag }}
          displayName: Tag Docker Image with tag ${{ tag }}

      - bash: |
          echo "$DOCKER_PASSWORD" | docker login -u $(dockerhub.username) --password-stdin
          docker push $(dockerhub.org)/ci-${{ img }}:${{ parameters.aswf_version }}
        displayName: Docker login and push
        condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
        env:
          DOCKER_PASSWORD: $(dockerhub.password)
