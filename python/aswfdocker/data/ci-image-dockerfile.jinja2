# syntax=docker/dockerfile:1.10
# check=skip=InvalidDefaultArgInFrom
# Copyright (c) Contributors to the aswf-docker Project. All rights reserved.
# SPDX-License-Identifier: Apache-2.0

# !!! This file is automatically generated from a template and the `image.yaml` file in the same folder !!!

ARG ASWF_ORG
ARG ASWF_PKG_ORG
ARG CI_COMMON_VERSION
ARG ASWF_CLANG_MAJOR_VERSION
ARG ASWF_PYSIDE_CLANG_VERSION
ARG ASWF_CONAN_CHANNEL
{% if name != "common" and name != "baseos-gl-conan" %}
ARG ASWF_VFXPLATFORM_VERSION
{% endif %}

{% for arg in docker_args -%}
ARG {{ arg }}
{% endfor -%}

{% for package in packages + implicit_packages -%}
ARG ASWF_{{package|upper|replace("-", "_")}}_VERSION
{% endfor -%}

{% for package in packages + implicit_packages -%}
{% for arg in index.package_data(package).get("docker_args", []) -%}
ARG {{ arg }}
{% endfor -%}
{% endfor %}

{% if name == "common" or name == "baseos-gl-conan" %}
ARG ASWF_BASEOS_IMAGE
ARG ASWF_BASEOS_DISTRO
{% endif %}

# Comment out this block to use Conan packages
{% for package in packages -%}
{% if not index.is_conan_only_package(package) -%}
FROM ${ASWF_PKG_ORG}/ci-package-{{ package }}:{{docker_package_version}}-$ASWF_{{package|upper|replace("-", "_")}}_VERSION AS ci-package-{{ package }}
{% endif -%}
{% endfor -%}


FROM {{ docker_from }} AS ci-{{ name }}


ARG ASWF_ORG
ARG ASWF_CONAN_HOME
ARG ASWF_PKG_ORG
ARG ASWF_VERSION
ARG CI_COMMON_VERSION
ARG ASWF_PYSIDE_CLANG_VERSION
ARG ASWF_CONAN_CHANNEL

{% if name == "common" or name == "baseos-gl-conan" %}
ARG ASWF_DTS_PREFIX
{% endif %}

{% for arg in docker_args -%}
ARG {{ arg }}
{% endfor -%}

{% for package in packages + implicit_packages -%}
ARG ASWF_{{package|upper|replace("-", "_")}}_VERSION
{% endfor -%}

{% for package in packages + implicit_packages -%}
{% for arg in index.package_data(package).get("docker_args", []) -%}
ARG {{ arg }}
{% endfor -%}
{% endfor %}

LABEL org.opencontainers.image.name="$ASWF_ORG/ci-{{ name }}"
LABEL org.opencontainers.image.title="{{ title }}"
LABEL org.opencontainers.image.description="{{ "\\\n".join(description.strip().split("\n")) }}"
LABEL org.opencontainers.image.url="http://aswf.io/"
LABEL org.opencontainers.image.source="https://github.com/AcademySoftwareFoundation/aswf-docker/blob/main/ci-{{ name }}/Dockerfile"
LABEL org.opencontainers.image.vendor="AcademySoftwareFoundation"
LABEL org.opencontainers.image.authors="Built by aswf.io CI Working Group"
LABEL org.opencontainers.image.version="${ASWF_VERSION}"

{% if name != "common"  and name != "baseos-gl-conan" %}
LABEL com.vfxplatform.version="${ASWF_VFXPLATFORM_VERSION}"
{% endif %}

{% for package in packages + implicit_packages -%}
LABEL io.aswf.docker.versions.{{ package }}="$ASWF_{{ package|upper|replace("-", "_") }}_VERSION"
{% endfor %}

ENV ASWF_ORG=${ASWF_ORG}
ENV ASWF_VERSION=${ASWF_VERSION}
ENV ASWF_INSTALL_PREFIX=/usr/local
ENV ASWF_PYSIDE_CLANG_VERSION=${ASWF_PYSIDE_CLANG_VERSION}


{% if name != "common" and name != "baseos-gl-conan" %}
ENV ASWF_VFXPLATFORM_VERSION=${ASWF_VFXPLATFORM_VERSION}
{% else %}
ENV ASWF_DTS_PREFIX=$ASWF_DTS_PREFIX
{% endif %}

{% for arg in docker_args -%}
ENV {{ arg }}=${{ arg }}
{% endfor -%}

{% for package in packages + implicit_packages -%}
ENV ASWF_{{package|upper|replace("-", "_")}}_VERSION=$ASWF_{{package|upper|replace("-", "_")}}_VERSION
{% endfor -%}

{% for package in packages + implicit_packages -%}
{% for arg in index.package_data(package).get("docker_args", []) -%}
ENV {{ arg }}=${{ arg }}
{% endfor -%}
{% endfor %}

{% for package in packages -%}
{% if not index.is_conan_only_package(package) -%}
COPY --from=ci-package-{{ package }} /. /usr/local/
{% endif -%}
{% endfor -%}

COPY ci-{{name}}/README.md ci-{{name}}/image.yaml /usr/local/aswf/

{{ docker_commands }}

{% for package in packages + implicit_packages -%}
{{ index.package_data(package).get("docker_commands", "") -}}
{% endfor -%}

COPY scripts/common/install_conanpackages.sh /tmp/

ARG ASWF_PYTHON_MAJOR_MINOR_VERSION
ENV ASWF_PYTHON_MAJOR_MINOR_VERSION=${ASWF_PYTHON_MAJOR_MINOR_VERSION}

# conan-only packages
COPY <<EOF /usr/local/conanfile.txt
[generators]
[imports]
., * -> .
[requires]
{% for package in packages -%}
{% if index.is_conan_only_package(package) -%}
{{package}}/${ASWF_{{package|upper|replace("-", "_")}}_VERSION}@${ASWF_PKG_ORG}/${ASWF_CONAN_CHANNEL}
{% else -%}
# {{package}}/${ASWF_{{package|upper|replace("-", "_")}}_VERSION}@${ASWF_PKG_ORG}/${ASWF_CONAN_CHANNEL}
{% endif -%}
{% endfor -%}
EOF

ENV CONAN_HOME=${ASWF_CONAN_HOME}/.conan2

{% if name != "common" and name != "baseos-gl-conan" %}
RUN --mount=type=cache,target=/opt/conan_home/d \
    --mount=type=bind,rw,target=/opt/conan_home/.conan2,source=packages/conan/settings \
    /tmp/install_conanpackages.sh /usr/local vfx${ASWF_VFXPLATFORM_VERSION} {{ name }}
{% else %}
RUN --mount=type=cache,target=/opt/conan_home/d \
    --mount=type=bind,rw,target=/opt/conan_home/.conan2,source=packages/conan/settings \
    /tmp/install_conanpackages.sh /usr/local ci_common${CI_COMMON_VERSION} {{ name }}
{% endif %}

{{ docker_post_commands }}
