trigger:
  paths:
    exclude:
    - README.md

variables:
  CI_COMMON_VERSION: "1.0"

stages:
- stage: build_common_docker_images
  displayName: Build Common Docker Images
  condition: always()
  jobs:
  - job:
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/master')
    timeoutInMinutes: 360
    pool:
      vmImage: 'ubuntu-16.04'
    steps:
      - script: docker login -u $(dockerhub.username) -p $(dockerhub.password)
        displayName: Docker login
      - bash: docker build -t $(dockerhub.org)/ci-common:${CI_COMMON_VERSION} -f ci-common/Dockerfile --build-arg CI_COMMON_VERSION=${CI_COMMON_VERSION} --build-arg BUILD_DATE=$(date -u +'%Y-%m-%dT%H:%M:%SZ') .
        displayName: Build Docker Images
      - bash: docker push $(dockerhub.org)/ci-common:${CI_COMMON_VERSION}
        displayName: Push Docker Images

- stage: build_vfx_docker_images
  displayName: Build VFX Platform Docker Images
  condition: always()
  jobs:
  - template: .azure/build-linux-docker-images.yml
    parameters:
      vfxplatform_version: '2018'
      aswf_version: '2018.0'
      python_version: '2.7'
      cicommon_version: '1.0'
      images: ['ci-base', 'ci-openexr', 'ci-openvdb', 'ci-ocio']

  - template: .azure/build-linux-docker-images.yml
    parameters:
      vfxplatform_version: '2019'
      aswf_version: '2019.0'
      python_version: '2.7'
      cicommon_version: '1.0'
      images: ['ci-base', 'ci-openexr', 'ci-openvdb', 'ci-ocio']

  - template: .azure/build-linux-docker-images.yml
    parameters:
      vfxplatform_version: '2020'
      aswf_version: '2020.0'
      python_version: '3.7'
      cicommon_version: '1.0'
      images: ['ci-base', 'ci-openexr']
