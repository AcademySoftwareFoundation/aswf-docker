# syntax=docker/dockerfile:1.10
# check=skip=InvalidDefaultArgInFrom
# Copyright (c) Contributors to the aswf-docker Project. All rights reserved.
# SPDX-License-Identifier: Apache-2.0

# !!! This file is automatically generated from a template and the `image.yaml` file in the same folder !!!

ARG ASWF_ORG
ARG ASWF_PKG_ORG
ARG CI_COMMON_VERSION
ARG ASWF_CLANG_MAJOR_VERSION
ARG ASWF_PYSIDE_CLANG_VERSION
ARG ASWF_CONAN_CHANNEL


ARG ASWF_CUDA_VERSION
ARG ASWF_OPTIX_VERSION
ARG ASWF_GLVND_VERSION
ARG ASWF_CCACHE_VERSION
ARG ASWF_DTS_VERSION
ARG ASWF_SONAR_VERSION
ARG ASWF_CMAKE_VERSION
ARG ASWF_CONAN_VERSION
ARG ASWF_YQ_VERSION
ARG ASWF_CONAN_PYTHON_VERSION



ARG ASWF_BASEOS_IMAGE
ARG ASWF_BASEOS_DISTRO


# Comment out this block to use Conan packages
FROM ${ASWF_BASEOS_IMAGE}:${ASWF_CUDA_VERSION}-runtime-${ASWF_BASEOS_DISTRO} AS ci-baseos-gl-conan


ARG ASWF_ORG
ARG ASWF_CONAN_HOME
ARG ASWF_PKG_ORG
ARG ASWF_VERSION
ARG CI_COMMON_VERSION
ARG ASWF_PYSIDE_CLANG_VERSION
ARG ASWF_CONAN_CHANNEL


ARG ASWF_DTS_PREFIX


ARG ASWF_CUDA_VERSION
ARG ASWF_OPTIX_VERSION
ARG ASWF_GLVND_VERSION
ARG ASWF_CCACHE_VERSION
ARG ASWF_DTS_VERSION
ARG ASWF_SONAR_VERSION
ARG ASWF_CMAKE_VERSION
ARG ASWF_CONAN_VERSION
ARG ASWF_YQ_VERSION
ARG ASWF_CONAN_PYTHON_VERSION


LABEL org.opencontainers.image.name="$ASWF_ORG/ci-baseos-gl-conan"
LABEL org.opencontainers.image.title="BaseOS Conan Builder Docker Image"
LABEL org.opencontainers.image.description="Contains: GCC and all base OS libraries"
LABEL org.opencontainers.image.url="http://aswf.io/"
LABEL org.opencontainers.image.source="https://github.com/AcademySoftwareFoundation/aswf-docker/blob/main/ci-baseos-gl-conan/Dockerfile"
LABEL org.opencontainers.image.vendor="AcademySoftwareFoundation"
LABEL org.opencontainers.image.authors="Built by aswf.io CI Working Group"
LABEL org.opencontainers.image.version="${ASWF_VERSION}"



LABEL io.aswf.docker.versions.cuda="$ASWF_CUDA_VERSION"
LABEL io.aswf.docker.versions.optix="$ASWF_OPTIX_VERSION"
LABEL io.aswf.docker.versions.glvnd="$ASWF_GLVND_VERSION"
LABEL io.aswf.docker.versions.ccache="$ASWF_CCACHE_VERSION"
LABEL io.aswf.docker.versions.dts="$ASWF_DTS_VERSION"
LABEL io.aswf.docker.versions.sonar="$ASWF_SONAR_VERSION"
LABEL io.aswf.docker.versions.cmake="$ASWF_CMAKE_VERSION"
LABEL io.aswf.docker.versions.conan="$ASWF_CONAN_VERSION"
LABEL io.aswf.docker.versions.yq="$ASWF_YQ_VERSION"


ENV ASWF_ORG=${ASWF_ORG}
ENV ASWF_VERSION=${ASWF_VERSION}
ENV ASWF_INSTALL_PREFIX=/usr/local
ENV ASWF_PYSIDE_CLANG_VERSION=${ASWF_PYSIDE_CLANG_VERSION}



ENV ASWF_DTS_PREFIX=$ASWF_DTS_PREFIX


ENV ASWF_CUDA_VERSION=$ASWF_CUDA_VERSION
ENV ASWF_OPTIX_VERSION=$ASWF_OPTIX_VERSION
ENV ASWF_GLVND_VERSION=$ASWF_GLVND_VERSION
ENV ASWF_CCACHE_VERSION=$ASWF_CCACHE_VERSION
ENV ASWF_DTS_VERSION=$ASWF_DTS_VERSION
ENV ASWF_SONAR_VERSION=$ASWF_SONAR_VERSION
ENV ASWF_CMAKE_VERSION=$ASWF_CMAKE_VERSION
ENV ASWF_CONAN_VERSION=$ASWF_CONAN_VERSION
ENV ASWF_YQ_VERSION=$ASWF_YQ_VERSION
ENV ASWF_CONAN_PYTHON_VERSION=$ASWF_CONAN_PYTHON_VERSION


COPY ci-baseos-gl-conan/README.md ci-baseos-gl-conan/image.yaml /usr/local/aswf/

COPY ../scripts/common/install_cudadevel.sh /tmp/

RUN --mount=type=cache,sharing=private,target=/var/cache/yum \
    /tmp/install_cudadevel.sh

COPY ../scripts/common/install_yumpackages.sh /tmp/

RUN --mount=type=cache,sharing=private,target=/var/cache/yum \
    /tmp/install_yumpackages.sh

COPY scripts/common/install_opengl.sh /tmp/

ARG ASWF_BASEOS_DISTRO
ENV ASWF_BASEOS_DISTRO=${ASWF_BASEOS_DISTRO}
RUN /tmp/install_opengl.sh

ENV NVIDIA_VISIBLE_DEVICES=${NVIDIA_VISIBLE_DEVICES:-all}
ENV NVIDIA_DRIVER_CAPABILITIES=${NVIDIA_DRIVER_CAPABILITIES:+$NVIDIA_DRIVER_CAPABILITIES,}graphics
ENV PKG_CONFIG_PATH=/usr/local/lib/pkgconfig

COPY scripts/common/install_optix.sh /tmp/

RUN /tmp/install_optix.sh

COPY scripts/common/install_pippackages.sh /tmp/

RUN --mount=type=cache,sharing=private,target=/root/.cache/pip \
    /tmp/install_pippackages.sh

COPY ../scripts/common/install_dev_ccache.sh \
     ../scripts/common/before_build.sh \
     ../scripts/common/copy_new_files.sh \
     ../scripts/common/install_dev_cmake.sh \
     /tmp/

ENV DOWNLOADS_DIR=/tmp/downloads \
    CCACHE_DIR=/tmp/ccache \
    ASWF_INSTALL_PREFIX=/usr/local \
    LD_LIBRARY_PATH=/usr/local/lib:/opt/rh/${ASWF_DTS_PREFIX}-${ASWF_DTS_VERSION}/root/usr/lib64:/opt/rh/${ASWF_DTS_PREFIX}-${ASWF_DTS_VERSION}/root/usr/lib:${LD_LIBRARY_PATH} \
    PATH=/opt/aswfbuilder/bin:/usr/local/bin:/opt/rh/${ASWF_DTS_PREFIX}-${ASWF_DTS_VERSION}/root/usr/bin:/opt/app-root/src/bin:/opt/rh/${ASWF_DTS_PREFIX}-${ASWF_DTS_VERSION}/root/usr/bin/:/usr/local/sbin:/usr/sbin:/usr/bin:/sbin:/bin

RUN --mount=type=cache,sharing=private,target=/tmp/downloads \
    /tmp/install_dev_cmake.sh && \
    /tmp/install_dev_ccache.sh

COPY scripts/common/install_yq.sh /tmp/

RUN /tmp/install_yq.sh

# Merge the previously separate ci-baseos-gl-os and ci-baseos-gl-conan stages:
# we are unlikely to want to iterate on Conan versions separately from the base image,
# and we want to make sure that ci-conan-package-builder always pulls a pre-built
# ci-baseos-gl-conan from Docker Hub rather than rebuilding it locally.

ARG ASWF_CONAN_VERSION
ARG ASWF_CONAN_PYTHON_VERSION

ENV ASWF_CONAN_ROOT=/opt/conan

COPY ../scripts/common/install_conan.sh /tmp/

RUN --mount=type=cache,sharing=private,target=/tmp/downloads \
    /tmp/install_conan.sh


COPY scripts/common/install_conanpackages.sh /tmp/

ARG ASWF_PYTHON_MAJOR_MINOR_VERSION
ENV ASWF_PYTHON_MAJOR_MINOR_VERSION=${ASWF_PYTHON_MAJOR_MINOR_VERSION}

# conan-only packages
COPY <<EOF /usr/local/conanfile.txt
[generators]
[imports]
., * -> .
[requires]
EOF

ENV CONAN_HOME=${ASWF_CONAN_HOME}/.conan2


RUN --mount=type=cache,target=/opt/conan_home/d \
    --mount=type=bind,rw,target=/opt/conan_home/.conan2,source=packages/conan/settings \
    /tmp/install_conanpackages.sh /usr/local ci_common${CI_COMMON_VERSION} baseos-gl-conan


